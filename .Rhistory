runApp()
runApp()
"54839503"
test <- "54839503"
test[1]
substr(test, 1, 1)
test <- "11000 054"
substr(test, 3, 7)
test <- '91111 12-5'
substr(test, 1, 1)
substr(test, 3, 7)
substr(test, 8,8)
substr(test, 9, 9)
test
test[8:]
test[[8:]]
substr(test, 9,)
substr(test, 9, nchar(test))
getWP <- function(numeric){
function(numeric)
inning <- substr(numeric, 1, 1)
half.inning <- substr(numeric, 2, 2)
state <- substr(numeric, 3, 7)
outs <- substr(numeric, 8,8)
rdiff <- substr(numeric, 9, nchar(numeric))
decadedata <- read.csv("decadedata-withwinners.csv", header = TRUE)
half.inning <- ifelse(half.inning == 'Top', 0, 1)
decadedata$RDIFF <- decadedata$HOME_SCORE_CT - decadedata$AWAY_SCORE_CT
data <- subset(decadedata, as.character(inning) == INN_CT & as.character(outs) == OUTS_CT &
as.character(vis.score) == AWAY_SCORE_CT & as.character(home.score) == HOME_SCORE_CT
& as.character(half.inning) == HALF.INNING & as.character(state) == STATE)
pos <- sum(data$winner == substr(data$GAME_ID, 1,3))
total <- nrow(data)
prob <- pos/total
return(prob)
}
getWP('91111 12-5')
getWP('00000 000')
getWP <- function(numeric){
inning <- substr(numeric, 1, 1)
half.inning <- substr(numeric, 2, 2)
state <- substr(numeric, 3, 7)
outs <- substr(numeric, 8,8)
rdiff <- substr(numeric, 9, nchar(numeric))
decadedata <- read.csv("decadedata-withwinners.csv", header = TRUE)
half.inning <- ifelse(half.inning == 'Top', 0, 1)
decadedata$RDIFF <- decadedata$HOME_SCORE_CT - decadedata$AWAY_SCORE_CT
data <- subset(decadedata, as.character(inning) == INN_CT & as.character(outs) == OUTS_CT &
as.character(vis.score) == AWAY_SCORE_CT & as.character(home.score) == HOME_SCORE_CT
& as.character(half.inning) == HALF.INNING & as.character(state) == STATE)
pos <- sum(data$winner == substr(data$GAME_ID, 1,3))
total <- nrow(data)
prob <- pos/total
return(prob)
}
getWP('91111 12-5')
getWP <- function(numeric){
inning <- substr(numeric, 1, 1)
half.inning <- substr(numeric, 2, 2)
state <- substr(numeric, 3, 7)
outs <- substr(numeric, 8,8)
rdiff <- substr(numeric, 9, nchar(numeric))
half.inning <- ifelse(half.inning == 'Top', 0, 1)
decadedata$RDIFF <- decadedata$HOME_SCORE_CT - decadedata$AWAY_SCORE_CT
data <- subset(decadedata, as.character(inning) == INN_CT & as.character(outs) == OUTS_CT &
as.character(vis.score) == AWAY_SCORE_CT & as.character(home.score) == HOME_SCORE_CT
& as.character(half.inning) == HALF.INNING & as.character(state) == STATE)
pos <- sum(data$winner == substr(data$GAME_ID, 1,3))
total <- nrow(data)
prob <- pos/total
return(prob)
}
getWP('91111 12-5')
inning <- 9
half.inning <- 1
state <- "111 1"
outs <- 2
rdiff <- -5
getWP <- function(numeric){
inning <- substr(numeric, 1, 1)
half.inning <- substr(numeric, 2, 2)
state <- substr(numeric, 3, 7)
outs <- substr(numeric, 8,8)
rdiff <- substr(numeric, 9, nchar(numeric))
half.inning <- ifelse(half.inning == 'Top', 0, 1)
decadedata$RDIFF <- decadedata$HOME_SCORE_CT - decadedata$AWAY_SCORE_CT
data <- subset(decadedata, as.character(inning) == INN_CT & as.character(outs) == OUTS_CT &
as.character(rdiff) == RDIFF & as.character(half.inning) == HALF.INNING & as.character(state) == STATE)
pos <- sum(data$winner == substr(data$GAME_ID, 1,3))
total <- nrow(data)
prob <- pos/total
return(prob)
}
getWP('91111 12-5')
data <- subset(decadedata, as.character(inning) == INN_CT & as.character(outs) == OUTS_CT &
as.character(rdiff) == RDIFF & as.character(half.inning) == HALF.INNING & as.character(state) == STATE)
decadedata$RDIFF <- decadedata$HOME_SCORE_CT - decadedata$AWAY_SCORE_CT
data <- subset(decadedata, as.character(inning) == INN_CT & as.character(outs) == OUTS_CT &
as.character(rdiff) == RDIFF & as.character(half.inning) == HALF.INNING & as.character(state) == STATE)
data <- subset(decadedata, as.character(9) == INN_CT & as.character(2) == OUTS_CT &
as.character(-5) == RDIFF & as.character(1) == HALF.INNING & as.character('111 1') == STATE)
data <- subset(decadedata, as.character(9) == INN_CT & as.character(2) == OUTS_CT &
as.character(5) == RDIFF & as.character(1) == HALF.INNING & as.character('111 1') == STATE)
data <- subset(decadedata, as.character(5) == INN_CT & as.character(2) == OUTS_CT &
as.character(5) == RDIFF & as.character(1) == HALF.INNING & as.character('111 1') == STATE)
decadedata$RDIFF
typeof(decadedata$RDIFF)
data <- subset(decadedata, as.character(5) == INN_CT & as.character(2) == OUTS_CT &
5 == RDIFF & as.character(1) == HALF.INNING & as.character('111 1') == STATE)
data <- subset(decadedata, as.character(1) == INN_CT & as.character(0) == OUTS_CT &
0 == RDIFF & as.character(0) == HALF.INNING & as.character('000 0') == STATE)
data <- subset(decadedata, as.character(1) == INN_CT & as.character(0) == OUTS_CT &
0 == RDIFF & 0 == HALF.INNING & as.character('000 0') == STATE)
data <- subset(decadedata, as.character(1) == INN_CT & as.character(0) == OUTS_CT &
5 == RDIFF & as.character(0) == HALF.INNING & as.character('000 0') == STATE)
data <- subset(decadedata, as.character(5) == INN_CT & as.character(0) == OUTS_CT &
5 == RDIFF & as.character(0) == HALF.INNING & as.character('000 0') == STATE)
getWP <- function(numeric){
inning <- substr(numeric, 1, 1)
half.inning <- substr(numeric, 2, 2)
state <- substr(numeric, 3, 7)
outs <- substr(numeric, 8,8)
rdiff <- substr(numeric, 9, nchar(numeric))
half.inning <- ifelse(half.inning == 'Top', 0, 1)
decadedata$RDIFF <- decadedata$HOME_SCORE_CT - decadedata$AWAY_SCORE_CT
data <- subset(decadedata, as.character(inning) == INN_CT & as.character(outs) == OUTS_CT &
rdiff == RDIFF & as.character(half.inning) == HALF.INNING & as.character(state) == STATE)
pos <- sum(data$winner == substr(data$GAME_ID, 1,3))
total <- nrow(data)
prob <- pos/total
return(prob)
}
getWP('91111 12-5')
getWP('51111 12-5')
getWP('71111 12-5')
getWP('11111 120')
getWP('10000 000')
getWP('10000 000')
getWP('10000 005')
getWP('11000 005')
getWP('31000 005')
getWP('91000 005')
getWP('91000 004')
getWP('91000 003')
allstates <- read.csv("allstates.csv", header =FALSE)
allstates <- read.csv("all.states.csv", header =FALSE)
View(allstates)
allstates[-c(1:6),]
allstates <- allstates[-c(1:6),]
allstates <- read.csv("all.states.csv", header =FALSE)
allstates <- allstates[,-c(1:6)]
allstates <- read.csv("all.states.csv", header =FALSE)
allstates <- read.csv("all.states.csv", header =FALSE)
View(allstates)
allstates[1:6,]
allstates[-c(1:6), ]
allstates <- allstates[-c(1:6), ]
allstates <- read.csv("all.states.csv", header =FALSE)
allstates[1:6, ] <- NULL
allstates[7: ,]
allstates[-c(1:6) ,]
sapply(allstates[-c(1:6),], getWP)
a <- allstates[7]
a <- allstates[7,]
a
nchar(a)
sapply(as.character(allstates[-c(1:6),]), getWP)
states <- sapply(as.character(allstates[-c(1:6),]), getWP)
runApp()
runApp()
runApp()
runApp()
runApp()
test <- list('10000 000','20000 000','30000 000','40000 000','50000 000')
states <- sapply(test, getWP)
decadedata <- read.csv("decadedata-withwinners.csv", header = TRUE)
allstates <- read.csv("all.states.csv", header =FALSE)
getWP <- function(numeric){
inning <- substr(numeric, 1, 1)
half.inning <- substr(numeric, 2, 2)
state <- substr(numeric, 3, 7)
outs <- substr(numeric, 8,8)
rdiff <- substr(numeric, 9, nchar(numeric))
half.inning <- ifelse(half.inning == 'Top', 0, 1)
decadedata$RDIFF <- decadedata$HOME_SCORE_CT - decadedata$AWAY_SCORE_CT
data <- subset(decadedata, as.character(inning) == INN_CT & as.character(outs) == OUTS_CT &
rdiff == RDIFF & as.character(half.inning) == HALF.INNING & as.character(state) == STATE)
pos <- sum(data$winner == substr(data$GAME_ID, 1,3))
total <- nrow(data)
prob <- pos/total
return(prob)
}
test
states <- sapply(test, getWP)
states
decadedata$RDIFF <- decadedata$HOME_SCORE_CT - decadedata$AWAY_SCORE_CT
states <- sapply(allstates[-c(1:6), ], getWP)
states <- sapply(as.character(allstates[-c(1:6), ]), getWP)
getWP <- function(numeric){
inning <- substr(numeric, 1, 1)
half.inning <- substr(numeric, 2, 2)
state <- substr(numeric, 3, 7)
outs <- substr(numeric, 8,8)
rdiff <- substr(numeric, 9, nchar(numeric))
half.inning <- ifelse(half.inning == 'Top', 0, 1)
data <- subset(decadedata, as.character(inning) == INN_CT & as.character(outs) == OUTS_CT &
rdiff == RDIFF & as.character(half.inning) == HALF.INNING & as.character(state) == STATE)
pos <- sum(data$winner == substr(data$GAME_ID, 1,3))
total <- nrow(data)
prob <- pos/total
return(prob)
}
states <- sapply(test, getWP)
t <- data.frame(test, states)
View(t)
t$val <- data.frame(states)
t <- NULL
t$val <- data.frame(states)
t$state <- test
t <- NULL
t$val <- data.frame(states)
t$val <- c(test)
t$val <- data.frame(states)
t$state <- c(test)
t$val <- data.frame(states)
t <- NULL
t$val <- data.frame(states)
c(test)
test
as.character(test)
c(as.character(test))
t$state <- c(as.character(test))
info$state <- c(as.character(allstates))
info$state <- data.frame(c(as.character(allstates)))
info$state <- data.frame((as.character(allstates)))
info <- data.frame()
info$state <- data.frame((as.character(allstates)))
info$state <- allstates
info$state <- c(allstates)
allstates
c(allstates)
c(allstates)[1:10]
c(allstates)[1]
info$state <- c(allstates)
View(info)
info <- NULL
info$state <- c(allstates)
allstates[1]
allstates[[1]]
allstates[1,
]
allstates[, 1]
allstates[1,1]
allstates[2,
]
allstates[6, ]
allstates[7, ]
allstates <- read.csv("all.states.csv", header =FALSE)
allstates <- read.csv("all.states.csv", header =FALSE, sep= ",")
allstates <- read.csv("allstates.csv", header =FALSE)
View(allstates)
paste(allstates$V9, allstates$V10, allstates$V11)
paste(allstates$V9, allstates$V10, allstates$V11, na.rm = TRUE)
paste(allstates$V9, allstates$V10, allstates$V11)
paste(allstates$V9, allstates$V10, allstates$V11, sep = "")
paste(allstates$V9, allstates$V10, allstates$V11)
if(allstates$V10 != 'NA' & allstates$V11 != 'NA'){allstates$V9 <- paste(allstates$V9, allstates$V10, allstates$V11)
}else if(allstates$V10 != 'NA'){allstates$V9 <- paste(allstates$V9, allstates$V10)
}
allstates$V10 != 'NA'
head(allstates$V10 != 'NA', n -5)
head(allstates$V10 != 'NA', n =5)
head(allstates$V10 != 'NA'& allstates$V11 != 'NA', n =5)
head((if(allstates$V10 != 'NA' & allstates$V11 != 'NA'){allstates$V9 <- paste(allstates$V9, allstates$V10, allstates$V11)
}), n=5)
allstates <- read.csv("allstates.csv", header =FALSE)
allstates
allstates[1]
typeof(allstates)
View(A14)
View(decadedata)
decadedata$RDIFF
writer.csv(decadedata, "ddfortest2.csv")
csv.write(decadedata, "ddfortest2.csv")
write.csv(decadedata, "ddfortest2.csv")
allstates <- list(read.csv("allstates.csv", header =FALSE))
allstates
allstates[1]
allstates[[1]]
allstates <- data.frame(read.csv("allstates.csv", header =FALSE))
View(allstates)
with(allstates(merge(V1,V2,V3,V4,V5,V6,V7,V8,V9,V10,V11)
)
)
(merge(allstates$V1,allstates$V2,allstates$V3,allstates$V4,allstates$V5,allstates$V6,allstates$V7,allstates$V8,allstates$V9,allstates$V10,allstates$V11)))
(merge(allstates$V1,allstates$V2,allstates$V3,allstates$V4,allstates$V5,allstates$V6,allstates$V7,allstates$V8,allstates$V9,allstates$V10,allstates$V11))
(cbind(allstates$V1,allstates$V2,allstates$V3,allstates$V4,allstates$V5,allstates$V6,allstates$V7,allstates$V8,allstates$V9,allstates$V10,allstates$V11))
a <- (cbind(allstates$V1,allstates$V2,allstates$V3,allstates$V4,allstates$V5,allstates$V6,allstates$V7,allstates$V8,allstates$V9,allstates$V10,allstates$V11))
View(a)
allstates <- data.frame(read.csv("allstates.csv", header =FALSE))
View(allstates)
allstates <- (read.csv("allstates.csv", header =FALSE))
View(allstates)
allstates <- list(read.csv("allstates.csv", header =FALSE))
allstates <- c(read.csv("allstates.csv", header =FALSE))
typeof(allstates)
allstates <-read.csv("allstates.csv", header =FALSE)
allstates
allstates[1]
allstates[2]
allstates[3]
test <- allstates[1:10]
test
info$val <- sapply(test, getWP)
info$val <- sapply(as.character(test), getWP)
info$val
as.character(test)
test
test[1]
as.character(test[1])
test[1,1]
View(allstates)
test <- c(allstates)
test
test[1]
test[2]
allstates[1, ]
allstates[,1]
getWP('50000 002')
getWP(5, 'Top', '000 0', 0, 2)
getWP <- function(inning,half.inning,state,outs,rdiff){
half.inning <- ifelse(half.inning == 'Top', 0, 1)
data <- subset(decadedata, as.character(inning) == INN_CT & as.character(outs) == OUTS_CT &
rdiff == RDIFF & as.character(half.inning) == HALF.INNING & as.character(state) == STATE)
pos <- sum(data$winner == substr(data$GAME_ID, 1,3))
total <- nrow(data)
prob <- pos/total
return(prob)
}
getWP(5, 'Top', '000 0', 0, 2)
getWP(6, 'Top', '000 0', 0, 2)
t1 <- sapply(1:9, getWP('Top', '000 0', 0, 2))
t1 <- getWP(1:9, 'Top', '000 0', 0, 2))
t1 <- getWP(1:9, 'Top', '000 0', 0, 2)
t1
t1 <- sapply(test, getWP(test, 'Top', '000 0', 0, 2))
Cumsum.df <- data.frame(read.csv("cumsum.df.csv", sep =",", header = TRUE))
View(Cumsum.df)
getWP <- function(inning,state,rdiff){
half.inning <- ifelse(half.inning == 'Top', 0, 1)
data <- subset(decadedata, as.character(inning) == INN_CT & rdiff == RDIFF & as.character(state) == STATE)
pos <- sum(data$winner == substr(data$GAME_ID, 1,3))
total <- nrow(data)
prob <- pos/total
return(prob)
}
getWP(1, '000 0', 0)
head(decadedata, n=3)
decadedata <- decadedata[c(2,3,6,102,105,106)]
write.csv(decadedata, "decadedata-withwinners.csv")
getWP <- function(inning,state,rdiff){
half.inning <- ifelse(half.inning == 'Top', 0, 1)
data <- subset(decadedata, as.character(inning) == INN_CT & rdiff == RDIFF & as.character(state) == STATE)
pos <- sum(data$winner == substr(data$GAME_ID, 1,3))
total <- nrow(data)
prob <- pos/total
return(prob)
}
getWP(5,"111 0",3)
decadedata <- read.csv("decadedata.csv", header = TRUE)
decadedata <- read.csv("all2010decade.csv", header = TRUE)
decadedata$HALF.INNING <- with(decadedata, paste(GAME_ID, INN_CT, BAT_HOME_ID))
View(decadedata)
decadedata <- read.csv("decadedata.csv", header = FALSE)
decadedata <- read.csv("all2010decade.csv", header = FALSE)
headers <- read.csv("fields.csv")
names(data) <- headers$Header
names(decadedata) <- headers$Header
decadedata$HALF.INNING <- with(decadedata, paste(GAME_ID, INN_CT, BAT_HOME_ID))
RUNNER1 <- ifelse(as.character(decadedata[,"BASE1_RUN_ID"])=="", 0, 1)
RUNNER2 <- ifelse(as.character(decadedata[,"BASE2_RUN_ID"])=="", 0, 1)
RUNNER3 <- ifelse(as.character(decadedata[,"BASE3_RUN_ID"])=="", 0, 1)
get.state <- function(runner1, runner2, runner3, outs){
runners <- paste(runner1, runner2, runner3, sep="")
paste(runners, outs)
}
decadedata$STATE <- get.state(RUNNER1, RUNNER2, RUNNER3, data$OUTS_CT)
decadedata$HALF.INNING
substr(decadedata$HALF.INNING, 13,15)
substr(decadedata$HALF.INNING, 14,16)
decadedata$HALF.INNING <- substr(decadedata$HALF.INNING, 14,16)
decadedata$RDIFF <- decadedata$HOME_SCORE_CT - decadedata$AWAY_SCORE_CT
GL <- read.csv("gamelogs.merged.csv", header = FALSE)
headers <- read.csv("fields2.csv")
names(GL) <- headers$Header
View(GL)
GL$GAME_ID <- paste(GL$HOME_TEAM, GL$DATE, GL$GAME_NUMBER)
GL <- GL[c(1:12),]
GL <- read.csv("gamelogs.merged.csv", header = FALSE)
headers <- read.csv("fields2.csv")
names(GL) <- headers$Header
GL <- GL[,c(1:12)]
GL$winner <- ifelse(GL$HOME_SCORE > GL$VISITING_SCORE, paste(GL$HOME_TEAM), paste(GL$VISITING_TEAM))
GL$GAME_ID <- paste(GL$HOME_TEAM, GL$DATE, GL$GAME_NUMBER)
GL <- GL[,c(13,14)]
test <- merge(GL, decadedata, by = "GAME_ID")
View(test)
GL$GAME_ID <- paste(GL$HOME_TEAM, GL$DATE, GL$GAME_NUMBER, sep="")
GL <- read.csv("gamelogs.merged.csv", header = FALSE)
headers <- read.csv("fields2.csv")
names(GL) <- headers$Header
GL$GAME_ID <- paste(GL$HOME_TEAM, GL$DATE, GL$GAME_NUMBER, sep="")
GL$winner <- ifelse(GL$HOME_SCORE > GL$VISITING_SCORE, paste(GL$HOME_TEAM), paste(GL$VISITING_TEAM))
GL <- GL[,c(1:12)]
GL$winner <- ifelse(GL$HOME_SCORE > GL$VISITING_SCORE, paste(GL$HOME_TEAM), paste(GL$VISITING_TEAM))
GL$GAME_ID <- paste(GL$HOME_TEAM, GL$DATE, GL$GAME_NUMBER, sep="")
GL <- GL[,c(13,14)]
test <- merge(GL, decadedata, by = "GAME_ID")
View(test)
View(test)
decadedata <- merge(GL, decadedata, by = "GAME_ID")
write.csv(decadedata, "decadedata-withwinners.csv")
getWP <- function(half.inning,state,rdiff){
data <- subset(decadedata, as.character(half.inning) == HALF.INNING & rdiff == RDIFF & as.character(state) == STATE)
pos <- sum(data$winner == substr(data$GAME_ID, 1,3))
total <- nrow(data)
prob <- pos/total
return(prob)
}
getWP('9 0','000 0', 2)
test <- subset(decadedata, '9 0' == decadedata$HALF.INNING)
half.inning == '9 0'
half.inning = '9 0'
state = '000 0'
rdiff = 2
data <- subset(decadedata, as.character(half.inning) == HALF.INNING & rdiff == RDIFF & as.character(state) == STATE)
test <- subset(decadedata, 2 == decadedata$RDIFF)
test <- subset(decadedata, 2 == RDIFF)
decadedata$STATE
RUNNER1 <- ifelse(as.character(decadedata[,"BASE1_RUN_ID"])=="", 0, 1)
RUNNER2 <- ifelse(as.character(decadedata[,"BASE2_RUN_ID"])=="", 0, 1)
RUNNER3 <- ifelse(as.character(decadedata[,"BASE3_RUN_ID"])=="", 0, 1)
get.state <- function(runner1, runner2, runner3, outs){
runners <- paste(runner1, runner2, runner3, sep="")
paste(runners, outs)
}
decadedata$STATE <- get.state(RUNNER1, RUNNER2, RUNNER3, decadedata$OUTS_CT)
decadedata$STATE
write.csv(decadedata, "decadedata-withwinners.csv")
getWP <- function(decadedata, half.inning,state,rdiff){
data <- subset(decadedata, as.character(half.inning) == HALF.INNING & rdiff == RDIFF & as.character(state) == STATE)
pos <- sum(data$winner == substr(data$GAME_ID, 1,3))
total <- nrow(data)
prob <- pos/total
return(prob)
}
getWP(decadedata, '9 0','000 0', 2)
getWP(decadedata, '9 1','000 0', -2)
getWP(decadedata, '9 1','000 0', -1)
getWP(decadedata, '9 1','111 0', -1)
getWP(decadedata, '9 1','111 0', 0)
runApp()
getWP(decadedata, '7 1', '010 1', 1)
runApp()
runApp()
runApp()
getWP(decadedata, '9 0','000 0',2)
renderText(getWP(decadedata, '9 0','000 0',2)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
decadedataW <- read.csv("decadedata-withwinners.csv", header = TRUE)
runApp()
runApp()
pitcherData <- read.csv('pitcherData.csv', header = TRUE)
pitcherData <- subset(pitcherData, pitcherData$mlb_pos == 'P')
pitcherData <- pitcherData[c(4,14,24,25,26)]
pitcherData <- pitcherData[-which(pitcherData$retro_id == ""), ]
dimnames(pitcherData)[[1]] = paste(pitcherData$mlb_team, pitcherData$retro_name)
write.csv(pitcherData, pitcherData-modified.csv)
write.csv(pitcherData, "pitcherData-modified.csv")
teams <- data.frame(getTeamIDs(as.numeric('2016')-1))
teams$batter.team <- (c('laa','bal','bos','chw','cle','det','hou','kc','min','nyy','oak','sea','tb', 'tex','tor','ari','atl','chc','cin','col','la','mia','mil','nym','phi','pit','sd','sf','stl','was'))
teams$league <- (c('AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','AL','NL','NL','NL','NL','NL','NL','NL','NL','NL','NL','NL','NL','NL','NL','NL'))
teams$full.name <- (c('Los Angeles Angels of Anaheim','Baltimore Orioles','Boston Red Sox','Chicago White Sox','Cleveland Indians','Detriot Tigers','Houston Astros','Kansas City Royals','Minnesota Twins','New York Yankees','Oakland Athletics','Seattle Mariners','Tampa Bay Rays','Texas Rangers','Toronto Blue Jays','Arizona Diamondbacks','Atlanta Braves','Chicago Cubs','Cincinnati Reds','Colorado Rockies','Los Angeles Dodgers','Miami Marlins','Milwaukee Brewers','New York Mets','Philadelphia Phillies','Pittsburgh Pirates','San Diego Padres','San Francisco Giants','St. Louis Cardinals','Washington Nationals'))
teams$pitching.data.team <- (c('LAA','BAL','BOS','CWS','CLE','DET','HOU','KC','MIN','NYY','OAK','SEA','TB','TEX','TOR','ARI','ATL','CHC','CIN','COL','LAD','MIA','MIL','NYM','PHI','PIT','SD','SF','STL','WSH'))
teams$field <- (c('Angel Stadium of Anaheim','Oriole Park at Camden Yards','Fenway Park II','U.S. Cellular Field','Progressive Field','Comerica Park','Minute Maid Park','Kauffman Stadium','Target Field','Yankee Stadium III','O.co Coliseum','Safeco Field','Tropicana Field','Rangers Ballpark in Arlington','Rogers Centre','Chase Field','Turner Field','Wrigley Field','Great American Ball Park','Coors Field','Dodger Stadium','Marlins Park','Miller Park','Citi Field','Citizens Bank Park','PNC Park','Petco Park','AT&T Park','Busch Stadium III','Nationals Park'))
teams$built.year <- (c(2012,1992,1934,2003,2012,2000,2002,1993,2010,2009,2012,1999,1998,2007,2005,2006,1997,1914,2003,1995,1962,2012,2001,2009,2004,2001,2004,2006,2006,2008))
dimnames(teams)[[2]][1] <- ('home.team')
write.csv(teams, "teams2016.csv")
runApp()
runApp()
